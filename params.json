{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"RTLtextarea","tagline":"Automatically detects RTL and configures a text input","body":"RTLtextarea [![Build Status](https://secure.travis-ci.org/twitter/RTLtextarea.png)](http://travis-ci.org/twitter/RTLtextarea)\r\n========\r\nAutomatically detects RTL (right-to-left) languages and appropriately configures the text input, without having to manually specify CSS `direction` or `dir` property on page load. Allows automatic switching between LTR and RTL languages.\r\n\r\nWhat it does\r\n------------\r\nThis module will set the direction of a textarea to RTL when a threshold\r\nof RTL characters has been reached (`rtlThreshold`). It also applies Twitter-\r\nspecific RTL rules regarding the placement of @ signs, # tags, and URLs.\r\n\r\n### Before:\r\n![before](http://twitter.github.com/RTLtextarea/img/rtltextarea_before.png)\r\n\r\n### After:\r\n![before](http://twitter.github.com/RTLtextarea/img/rtltextarea_after.png)\r\n\r\nHow to use\r\n-----------\r\nBind keyup and keydown to `RTLText.onTextChange`. If you have initial text,\r\ncall `RTLText.setText(textarea, initial_string)` to set markers on that\r\ninitial text.\r\n\r\n```javascript\r\n  $(document).ready(function(){\r\n    var $textarea = $('#someTextarea');\r\n    $textarea.on('keyup', RTLText.onTextChange);\r\n    $textarea.on('keydown', RTLText.onTextChange);\r\n    RTLText.setText($textarea.get(0), $textarea.val());\r\n  });\r\n```\r\n\r\nWhen storing or submitting the text, make sure to extract the unicode markers first:\r\n\r\n```javascript\r\n  var textToSubmit = RTLText.cleanText($(\"#someTextarea\").val());\r\n```\r\n\r\nGet the length of the text minus the control characters:\r\n\r\n```javascript\r\n  var textLength = RTLText.textLength($(\"#someTextarea\").val());\r\n```\r\n\r\nAdd markers to a string without affecting the text box:\r\n\r\n```javascript\r\n  var stringWithMarkers = RTLText.addRTLMarkers(string);\r\n```\r\n\r\nVersioning\r\n----------\r\nWe use semantic versioning, as described here: http://semver.org/\r\n\r\nReleases are numbered and constructed with the following guidelines:\r\n\r\n  * Breaking backwards compatibility bumps the major\r\n  * New additions without breaking backwards compatibility bumps the minor\r\n  * Bug fixes and misc changes bump the patch\r\n\r\nTesting\r\n----------\r\nTests use [Jasmine](http://pivotal.github.com/jasmine/) and [PhantomJS](http://phantomjs.org/). To run them, just use: `npm test`.\r\n\r\nAuthors\r\n----------\r\n**Naoki Takano**\r\n+ https://github.com/hontent\r\n+ [@honten](http://www.twitter.com/honten)\r\n\r\n**Esten Hurtle**\r\n+ https://github.com/estenh\r\n+ [@esten](http://www.twitter.com/esten)\r\n\r\nLicense\r\n-----------\r\nCopyright 2012 Twitter, Inc.\r\n\r\nLicensed under the [MIT License](http://opensource.org/licenses/mit-license.php)\r\n"}